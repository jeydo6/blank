name: staging-lt

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'
jobs:
  main:
    runs-on: self-hosted
    steps:
      - name: Set GitHub Environment variables
        run: |
          # Set GitHub Environment variables
          echo "DOCKER_IMAGE_NAME=${GITHUB_REPOSITORY}" >> $GITHUB_ENV
          echo "DOCKER_CONTAINER_NAME=$(echo ${GITHUB_REPOSITORY} | cut -d'/' -f2)-lt" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          # Setup SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts

      - name: Run Docker image
        run: |
          # Run Docker image
          ssh ${{ secrets.STAGING_SSH_USER }}@${{ secrets.STAGING_HOST }} << EOF
          docker rm -f ${{ env.DOCKER_CONTAINER_NAME }}
          docker run --detach \
          --name ${{ env.DOCKER_CONTAINER_NAME }} \
          --publish ${{ secrets.STAGING_LT_APP_PORT }}:${{ secrets.STAGING_LT_APP_PORT }} \
          --env ASPNETCORE_ENVIRONMENT=Staging \
          --env ASPNETCORE_HTTP_PORTS=${{ secrets.STAGING_LT_APP_PORT }} \
          ${{ env.DOCKER_IMAGE_NAME }}
          EOF

      - name: Run Load test
        run: |
          # Run Load test
          cd k6 && mkdir report

          for script in *.scenario.js; do
            SCRIPT_NAME=$(echo $script | cut -d'/' -f2 | cut -d'.' -f1)
            K6_WEB_DASHBOARD=true \
            K6_WEB_DASHBOARD_EXPORT=report/${SCRIPT_NAME}.report.html \
            APP_BASE_ADDRESS=http://${{ secrets.STAGING_HOST }}:${{ secrets.STAGING_LT_APP_PORT }} \
            k6 run $script
          done

          PUSHGATEWAY_BASE_ADDRESS=http://${{ secrets.STAGING_HOST }}:${{ secrets.STAGING_PUSHGATEWAY_PORT }} \
          JOB_NAME=k6 \
          INSTANCE_NAME=${{ env.DOCKER_CONTAINER_NAME }} \
          python3 push_metrics.py

      - uses: actions/upload-artifact@v4
        with:
          name: report_${{ github.run_id }}
          path: k6/report
          retention-days: 7

      - name: Remove Docker image
        run: |
          # Remove Docker image
          ssh ${{ secrets.STAGING_SSH_USER }}@${{ secrets.STAGING_HOST }} << EOF
          docker rm -f ${{ env.DOCKER_CONTAINER_NAME }}
          EOF
