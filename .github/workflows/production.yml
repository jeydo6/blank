name: deploy release

on:
  push:
    branches:
      - 'release/**'

jobs:
  build-and-run-docker-image:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set GitHub Environment variables
        run: |
          # Set GitHub Environment variables
          echo "DOCKER_IMAGE_NAME=${GITHUB_REPOSITORY}-lt:latest" >> $GITHUB_ENV
          echo "DOCKER_CONTAINER_NAME=$(echo ${GITHUB_REPOSITORY} | cut -d'/' -f2)-lt" >> $GITHUB_ENV
          echo "REPORT_FOLDER_NAME=report_${GITHUB_RUN_ID}" >> $GITHUB_ENV
          

      - name: Build Docker image
        run: |
          # Build Docker image
          docker build --platform linux/amd64 --tag ${{ env.DOCKER_IMAGE_NAME }} .

      - name: Run Docker image
        run: |
          # Run Docker image
          docker rm -f ${{ env.DOCKER_CONTAINER_NAME }}
          docker run --detach --rm \
            --name ${{ env.DOCKER_CONTAINER_NAME }} \
            --network k6-network \
            --env ASPNETCORE_ENVIRONMENT=Production \
            --env ASPNETCORE_HTTP_PORTS=${{ secrets.PRODUCTION_APP_PORT }} \
          ${{ env.DOCKER_IMAGE_NAME }}

      - name: Run Load test
        run: |
          # Run Load test
          cd k6
          mkdir ${{ env.REPORT_FOLDER_NAME }}
          for script in *.js; do
            SCRIPT_NAME=$(echo $script | cut -d'/' -f2 | cut -d'.' -f1)
            docker run --rm \
              --name k6 \
              --network k6-network \
              --volume $(pwd):/k6 \
              --user $(id -u):$(id -g) \
              --env K6_WEB_DASHBOARD=true \
              --env K6_WEB_DASHBOARD_EXPORT=/k6/${{ env.REPORT_FOLDER_NAME }}/${SCRIPT_NAME}.html \
              --env APP_BASE_ADDRESS=http://${{ env.DOCKER_CONTAINER_NAME }}:${{ secrets.PRODUCTION_APP_PORT }} \
            grafana/k6:latest run /k6/$script
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPORT_FOLDER_NAME }}
          path: k6/${{ env.REPORT_FOLDER_NAME }}
          retention-days: 7

      - name: Remove Docker image
        run: |
          # Remove Docker image
          docker rm -f ${{ env.DOCKER_CONTAINER_NAME }}
          docker rmi -f ${{ env.DOCKER_IMAGE_NAME }}
