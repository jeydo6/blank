name: action

on:
  push:
    paths:
      - '**/workflows/*.yml'
      - '**.cs'
      - '**.csproj'

env:
  DOTNET_VERSION: '8.x'
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: true
          cache-dependency-path: '**/packages.lock.json'
      - run: dotnet restore --locked-mode
      - run: |
          cd src/Blank.Presentation
          dotnet build --configuration Release --no-restore
      # - run: |
      #     dotnet test --logger trx --results-directory dotnet-test-results
      # - uses: actions/upload-artifact@v4
      #   with:
      #       name: dotnet-test-results
      #       path: dotnet-test-results
      #       retention-days: 7

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.PRODUCTION_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/Blank.Presentation/Dockerfile
          platforms: linux/amd64
          tags: jeydo6/blank:latest
          push: false

      - name: Copy Docker image to remote server
        run: |
          docker save jeydo6/blank:latest | bzip2 | ssh root@production docker load

      # - name: Run remote command
      #   run: ssh ${{ secrets.PRODUCTION_SSH_USER }}@${{ secrets.PRODUCTION_SSH_HOST }} 'sudo touch ~/hello-from-github'
